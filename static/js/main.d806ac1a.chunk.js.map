{"version":3,"sources":["components/GoodsList/GoodsList.tsx","components/Button/Button.tsx","App.tsx","index.tsx"],"names":["SortType","Button","React","memo","props","name","active","action","type","className","classNames","onClick","possibleLength","GoodsList","state","isReversed","sortBy","default","minLength","selectMinLength","e","setState","target","value","reverse","sortAlphabetically","alphabetically","sortByLength","length","reset","getVisibleGoods","goods","visibleGoods","filter","good","sort","firstGood","secondGood","localeCompare","this","goodsFromServer","onChange","map","item","Component","App","isListVisible","showContent","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d806ac1a.chunk.js","sourcesContent":["import React from 'react';\nimport { Button } from '../Button';\nimport './GoodsList.scss';\n\nconst possibleLength: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\ninterface Props {\n  goodsFromServer: string[];\n}\n\nenum SortType {\n  default,\n  alphabetically,\n  length,\n}\n\ninterface State {\n  isReversed: boolean;\n  sortBy: SortType,\n  minLength: number,\n}\n\nexport class GoodsList extends React.Component<Props, State> {\n  state: State = {\n    isReversed: false,\n    sortBy: SortType.default,\n    minLength: 1,\n  };\n\n  selectMinLength = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    this.setState({\n      minLength: +(e.target.value),\n    });\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortAlphabetically = () => {\n    this.setState({\n      sortBy: SortType.alphabetically,\n    });\n  };\n\n  sortByLength = () => {\n    this.setState({\n      sortBy: SortType.length,\n    });\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortBy: SortType.default,\n      minLength: 1,\n    });\n  };\n\n  getVisibleGoods = (goods: string[]) => {\n    const {\n      isReversed,\n      sortBy,\n      minLength,\n    } = this.state;\n\n    const visibleGoods = goods.filter(good => good.length > minLength);\n\n    visibleGoods.sort(\n      (firstGood, secondGood) => {\n        switch (sortBy) {\n          case SortType.alphabetically:\n            return firstGood.localeCompare(secondGood);\n          case SortType.length:\n            return firstGood.length - secondGood.length;\n          default:\n            return 0;\n        }\n      },\n    );\n\n    if (isReversed) {\n      visibleGoods.reverse();\n    }\n\n    return visibleGoods;\n  };\n\n  render() {\n    const {\n      isReversed,\n      sortBy,\n      minLength,\n    } = this.state;\n\n    const { goodsFromServer } = this.props;\n\n    const visibleGoods = this.getVisibleGoods(goodsFromServer);\n\n    return (\n      <div className=\"goods-content\">\n        <select\n          name=\"minLength\"\n          className=\"form-select\"\n          aria-label=\"Default select example\"\n          value={minLength}\n          onChange={this.selectMinLength}\n        >\n          {possibleLength.map(\n            item => (\n              <option\n                value={item}\n                key={item}\n              >\n                {item}\n              </option>\n            ),\n          )}\n        </select>\n\n        <ul className=\"goods-content__list\">\n          {\n            visibleGoods.map(good => (\n              <li\n                className=\"goods-content__item\"\n                key={good}\n              >\n                {good}\n              </li>\n            ))\n          }\n        </ul>\n\n        <div className=\"goods-content__buttons\">\n          <Button\n            name=\"Reverse\"\n            active={isReversed}\n            action={this.reverse}\n          />\n\n          <Button\n            name=\"Sort alphabetically\"\n            active={sortBy === SortType.alphabetically}\n            action={this.sortAlphabetically}\n          />\n\n          <Button\n            name=\"Reset\"\n            active={false}\n            action={this.reset}\n          />\n\n          <Button\n            name=\"Sort by length\"\n            active={sortBy === SortType.length}\n            action={this.sortByLength}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport './Button.scss';\n\ntype Props = {\n  name: string;\n  active: boolean;\n  action: () => void;\n};\n\nexport const Button: React.FC<Props> = React.memo((props) => {\n  const {\n    name,\n    active,\n    action,\n  } = props;\n\n  return (\n    <button\n      type=\"button\"\n      className={classNames(\n        {\n          'btn btn-primary': active,\n          'btn btn-secondary': !active,\n        }, 'Button',\n      )}\n      onClick={action}\n    >\n      {name}\n    </button>\n  );\n});\n","import React from 'react';\nimport { Button } from './components/Button';\nimport { GoodsList } from './components/GoodsList';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface State {\n  isListVisible: boolean;\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    isListVisible: false,\n  };\n\n  showContent = () => {\n    this.setState({\n      isListVisible: true,\n    });\n  };\n\n  render() {\n    const { isListVisible } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">Goods</h1>\n        { !isListVisible && (\n          <Button name=\"Start\" action={this.showContent} active />\n        )}\n\n        { isListVisible && (\n          <GoodsList goodsFromServer={goodsFromServer} />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}